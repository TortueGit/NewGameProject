#pragma once

#include "global.h"

#include "Language.h"
#include "Key.h"
#include "DisplayMode.h"

// pure static class used to resolve enum names.
class EnumNames final {
private:
	EnumNames() {}
public:
	static std::string getLanguageName(Language lang) {
		switch (lang) {
		default:
		case Language::MAX:
		case Language::VOID:
			return "Unknown";
		case Language::Lang_FR:
			return "Français";
		case Language::Lang_CH:
			return "SwissGerman";
		case Language::Lang_DE:
			return "German";
		case Language::Lang_EN:
			return "English";
		case Language::LANG_ES:
			return "Spanish";
		}
	}

	static std::string getDisplayModeName(DisplayMode mode) {
		switch (mode) {
		default:
		case DisplayMode::MAX:
		case DisplayMode::VOID:
			return "Unknown";
		case DisplayMode::Window:
			return "Window";
		case DisplayMode::Fullscreen:
			return "Fullscreen";
		case DisplayMode::WindowedFullscreen:
			return "WindowedFullscreen";
		}
	}

	static std::string getKeyName(Key key) {
		switch (key) {
		default:
		case Key::MAX:
		case Key::VOID:
			return "Unknown";
		case Key::Escape:
			return "Exit";
		case Key::Market:
			return "Market";
		case Key::Trade:
			return "Trade";
		case Key::Mercenaries:
			return "Mercenaries";
		case Key::Politics:
			return "Politics";
		case Key::Structs:
			return "Structs";
		case Key::Resources:
			return "Resources";
		case Key::Agents:
			return "Agents";
		case Key::Search:
			return "Search";
		case Key::Occult:
			return "Occult";
		case Key::Quickload:
			return "Quickload";
		case Key::Quicksave:
			return "Quicksave";
		case Key::Confirm:
			return "Confirm";
		}
	}

	static std::string getKeyboardKeyName(sf::Keyboard::Key key) {
		switch (key) {
		default:
		case sf::Keyboard::Unknown:
			return "Unknown";
		case sf::Keyboard::KeyCount:
			return "<...>";
		case sf::Keyboard::A:
			return "A";
		case sf::Keyboard::B:
			return "B";
		case sf::Keyboard::C:
			return "C";
		case sf::Keyboard::D:
			return "D";
		case sf::Keyboard::E:
			return "E";
		case sf::Keyboard::F:
			return "F";
		case sf::Keyboard::G:
			return "G";
		case sf::Keyboard::H:
			return "H";
		case sf::Keyboard::I:
			return "I";
		case sf::Keyboard::J:
			return "J";
		case sf::Keyboard::K:
			return "K";
		case sf::Keyboard::L:
			return "L";
		case sf::Keyboard::M:
			return "M";
		case sf::Keyboard::N:
			return "N";
		case sf::Keyboard::O:
			return "O";
		case sf::Keyboard::P:
			return "P";
		case sf::Keyboard::Q:
			return "Q";
		case sf::Keyboard::R:
			return "R";
		case sf::Keyboard::S:
			return "S";
		case sf::Keyboard::T:
			return "T";
		case sf::Keyboard::U:
			return "U";
		case sf::Keyboard::V:
			return "V";
		case sf::Keyboard::W:
			return "W";
		case sf::Keyboard::X:
			return "X";
		case sf::Keyboard::Y:
			return "Y";
		case sf::Keyboard::Z:
			return "Z";
		case sf::Keyboard::Num0:
			return "0";
		case sf::Keyboard::Num1:
			return "1";
		case sf::Keyboard::Num2:
			return "2";
		case sf::Keyboard::Num3:
			return "3";
		case sf::Keyboard::Num4:
			return "4";
		case sf::Keyboard::Num5:
			return "5";
		case sf::Keyboard::Num6:
			return "6";
		case sf::Keyboard::Num7:
			return "7";
		case sf::Keyboard::Num8:
			return "8";
		case sf::Keyboard::Num9:
			return "9";
		case sf::Keyboard::Escape:
			return "Escape";
		case sf::Keyboard::LControl:
			return "LControl";
		case sf::Keyboard::LShift:
			return "LShift";
		case sf::Keyboard::LAlt:
			return "LAlt";
		case sf::Keyboard::LSystem:
			return "LSystem";
		case sf::Keyboard::RControl:
			return "RControl";
		case sf::Keyboard::RShift:
			return "RShift";
		case sf::Keyboard::RAlt:
			return "RAlt";
		case sf::Keyboard::RSystem:
			return "RSystem";
		case sf::Keyboard::Menu:
			return "Menu";
		case sf::Keyboard::LBracket:
			return "LBracket";
		case sf::Keyboard::RBracket:
			return "RBracket";
		case sf::Keyboard::SemiColon:
			return "SemiColon";
		case sf::Keyboard::Comma:
			return "Comma";
		case sf::Keyboard::Period:
			return "Period";
		case sf::Keyboard::Quote:
			return "Quote";
		case sf::Keyboard::Slash:
			return "Slash";
		case sf::Keyboard::BackSlash:
			return "BackSlash";
		case sf::Keyboard::Tilde:
			return "Tilde";
		case sf::Keyboard::Equal:
			return "Equal";
		case sf::Keyboard::Dash:
			return "Dash";
		case sf::Keyboard::Space:
			return "Space";
		case sf::Keyboard::Return:
			return "Return";
		case sf::Keyboard::BackSpace:
			return "BackSpace";
		case sf::Keyboard::Tab:
			return "Tab";
		case sf::Keyboard::PageUp:
			return "PageUp";
		case sf::Keyboard::PageDown:
			return "PageDown";
		case sf::Keyboard::End:
			return "End";
		case sf::Keyboard::Home:
			return "Home";
		case sf::Keyboard::Insert:
			return "Insert";
		case sf::Keyboard::Delete:
			return "Delete";
		case sf::Keyboard::Add:
			return "Add";
		case sf::Keyboard::Subtract:
			return "Subtract";
		case sf::Keyboard::Multiply:
			return "Multiply";
		case sf::Keyboard::Divide:
			return "Divide";
		case sf::Keyboard::Left:
			return "Left";
		case sf::Keyboard::Right:
			return "Right";
		case sf::Keyboard::Up:
			return "Up";
		case sf::Keyboard::Down:
			return "Down";
		case sf::Keyboard::Numpad0:
			return "Num0";
		case sf::Keyboard::Numpad1:
			return "Num1";
		case sf::Keyboard::Numpad2:
			return "Num2";
		case sf::Keyboard::Numpad3:
			return "Num3";
		case sf::Keyboard::Numpad4:
			return "Num4";
		case sf::Keyboard::Numpad5:
			return "Num5";
		case sf::Keyboard::Numpad6:
			return "Num6";
		case sf::Keyboard::Numpad7:
			return "Num7";
		case sf::Keyboard::Numpad8:
			return "Num8";
		case sf::Keyboard::Numpad9:
			return "Num9";
		case sf::Keyboard::F1:
			return "F1";
		case sf::Keyboard::F2:
			return "F2";
		case sf::Keyboard::F3:
			return "F3";
		case sf::Keyboard::F4:
			return "F4";
		case sf::Keyboard::F5:
			return "F5";
		case sf::Keyboard::F6:
			return "F6";
		case sf::Keyboard::F7:
			return "F7";
		case sf::Keyboard::F8:
			return "F8";
		case sf::Keyboard::F9:
			return "F9";
		case sf::Keyboard::F10:
			return "F10";
		case sf::Keyboard::F11:
			return "F11";
		case sf::Keyboard::F12:
			return "F12";
		case sf::Keyboard::F13:
			return "F13";
		case sf::Keyboard::F14:
			return "F14";
		case sf::Keyboard::F15:
			return "F15";
		case sf::Keyboard::Pause:
			return "Pause";
		}
	}

	static std::string getShortKeyboardKeyName(sf::Keyboard::Key key) {
		switch (key) {
		case sf::Keyboard::Unknown:
			return "??";
		case sf::Keyboard::Escape:
			return "Esc";
		case sf::Keyboard::LControl:
			return "LCt";
		case sf::Keyboard::LShift:
			return "LSh";
		case sf::Keyboard::LAlt:
			return "LAl";
		case sf::Keyboard::LSystem:
			return "LSy";
		case sf::Keyboard::RControl:
			return "RCt";
		case sf::Keyboard::RShift:
			return "RSh";
		case sf::Keyboard::RAlt:
			return "RAl";
		case sf::Keyboard::RSystem:
			return "RSy";
		case sf::Keyboard::Menu:
			return "Men";
		case sf::Keyboard::LBracket:
			return "LBr";
		case sf::Keyboard::RBracket:
			return "RBr";
		case sf::Keyboard::SemiColon:
			return ";";
		case sf::Keyboard::Comma:
			return ",";
		case sf::Keyboard::Period:
			return ".";
		case sf::Keyboard::Quote:
			return "\"";
		case sf::Keyboard::Slash:
			return "/";
		case sf::Keyboard::BackSlash:
			return "\\";
		case sf::Keyboard::Tilde:
			return "~";
		case sf::Keyboard::Equal:
			return "=";
		case sf::Keyboard::Dash:
			return "-";
		case sf::Keyboard::Space:
			return "Spa";
		case sf::Keyboard::Return:
			return "Ret";
		case sf::Keyboard::BackSpace:
			return "<--";
		case sf::Keyboard::PageUp:
			return "PgU";
		case sf::Keyboard::PageDown:
			return "PgD";
		case sf::Keyboard::Home:
			return "Hom";
		case sf::Keyboard::Insert:
			return "In";
		case sf::Keyboard::Delete:
			return "Del";
		case sf::Keyboard::Add:
			return "Add";
		case sf::Keyboard::Subtract:
			return "Sub";
		case sf::Keyboard::Multiply:
			return "Mul";
		case sf::Keyboard::Divide:
			return "Div";
		case sf::Keyboard::Left:
			return "<-";
		case sf::Keyboard::Right:
			return "->";
		case sf::Keyboard::Up:
			return "Up";
		case sf::Keyboard::Down:
			return "Dwn";
		case sf::Keyboard::Numpad0:
			return "Nu0";
		case sf::Keyboard::Numpad1:
			return "Nu1";
		case sf::Keyboard::Numpad2:
			return "Nu2";
		case sf::Keyboard::Numpad3:
			return "Nu3";
		case sf::Keyboard::Numpad4:
			return "Nu4";
		case sf::Keyboard::Numpad5:
			return "Nu5";
		case sf::Keyboard::Numpad6:
			return "Nu6";
		case sf::Keyboard::Numpad7:
			return "Nu7";
		case sf::Keyboard::Numpad8:
			return "Nu8";
		case sf::Keyboard::Numpad9:
			return "Nu9";
		case sf::Keyboard::Pause:
			return "Pau";
		default:
			break;
		}

		return getKeyboardKeyName(key);
	}
};